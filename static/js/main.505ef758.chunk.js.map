{"version":3,"sources":["component/header/piano.js","component/header/index.js","component/carousel/carousel.js","component/photoShow/index.js","component/Loading/index.js","pages/index/index.js","pages/two/utils/RecordsAPI.js","pages/two/Record.js","pages/two/recordForm.js","pages/two/AmountBox.js","pages/two/Records.js","component/404/index.js","component/main/index.js","App.js","serviceWorker.js","index.js"],"names":["piano","frequency","window","AudioContext","webkitAudioContext","audioCtx","oscillator","createOscillator","gainNode","createGain","connect","destination","type","value","gain","setValueAtTime","currentTime","linearRampToValueAtTime","start","exponentialRampToValueAtTime","stop","Index","fre","Fragment","className","src","alt","width","to","id","onClick","Piano","Carousel","props","local","useState","state","setState","Img","imgList","url","img","setImg","style","setStyle","ok","setOk","useEffect","setTimeout","title","FetchUpload","upok","setUpok","fileInput","useRef","uploadSrc","photoList","current","click","ref","name","accept","hidden","onChange","reader","FileReader","files","readAsDataURL","onload","result","data","FormData","append","fetch","method","body","then","res","text","getChange","change","map","photo","key","_id","href","target","Loading","setPhotoList","isLoading","setIsLoading","setChange","JSON","parse","records","slice","v","console","log","api","Record","edit","setEdit","rDate","rTitle","rAmount","handleToggle","handleEdit","e","preventDefault","record","date","amount","Number","parseInt","axios","put","response","handleEditRecord","catch","error","message","handleDelete","delete","handleDeleteRecord","defaultValue","RecordForm","setDate","setTitle","setAmount","onSubmit","post","handleNewRecord","placeholder","disabled","AmountBox","Records","setRecords","setError","isLoaded","setIsLoaded","get","recordComponent","updateRecord","recordIndex","indexOf","newRecords","item","index","deleteRecord","filter","i","credits","reduce","prev","curr","debits","C404","Main","path","exact","component","Two","c404","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.505ef758.chunk.js","sourcesContent":["\r\n\r\nexport default function piano(frequency) {\r\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n// 创建音频上下文  \r\nlet audioCtx = new AudioContext();\r\nreturn ()=>{\r\n\r\n// 创建音调控制对象 \r\nlet oscillator = audioCtx.createOscillator();\r\n// 创建音量控制对象  \r\nlet gainNode = audioCtx.createGain();\r\n// 音调音量关联  \r\noscillator.connect(gainNode);\r\n// 音量和设备关联  \r\ngainNode.connect(audioCtx.destination);\r\n// 音调类型指定为正弦波  \r\noscillator.type = 'sine';\r\n// 设置音调频率  \r\noscillator.frequency.value = frequency;\r\n// 先把当前音量设为0  \r\ngainNode.gain.setValueAtTime(0, audioCtx.currentTime);\r\n// 0.01秒时间内音量从刚刚的0变成1，线性变化 \r\ngainNode.gain.linearRampToValueAtTime(1, audioCtx.currentTime + 0.01);\r\n  // 声音走起 \r\noscillator.start(audioCtx.currentTime);\r\n// 1秒时间内音量从刚刚的1变成0.001，指数变化 \r\ngainNode.gain.exponentialRampToValueAtTime(0.001, audioCtx.currentTime + 3);\r\n// 1秒后停止声音 \r\noscillator.stop(audioCtx.currentTime + 3);\r\n\r\n}\r\n  \r\n\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './header.css';\r\nimport Piano from './piano'\r\n\r\nfunction Index() {\r\n  const fre = [523, 587, 659, 698, 784, 880, 987];\r\n  return (\r\n    <React.Fragment>\r\n      <header className='myHeader'>\r\n        <div className='back'><img src=\"./u2.svg\" alt=\"\" width=\"100%\" /></div>\r\n        <div className=\"logo\"><img src=\"./LOGO.png\" alt=\"log\" width=\"100%\" /></div>\r\n        <div className=\"nav\">\r\n          <img src=\"./u0.svg\" alt=\"\" width=\"100%\" />\r\n          <ul>\r\n            <Link to='/'><li id=\"nav-li1\" onClick={Piano(fre[0])}>首页</li></Link>\r\n            <Link to='/two'> <li id=\"nav-li2\" onClick={Piano(fre[1])}>页面1</li></Link>\r\n            <Link to='/'> <li id='nav-li3' onClick={Piano(fre[2])}>页面2</li></Link>\r\n            <Link to='/'><li id='nav-li4' onClick={Piano(fre[3])}>页面3</li></Link>\r\n            <Link to='/'><li id='nav-li5' onClick={Piano(fre[4])}>页面4</li></Link>\r\n            <Link to='/'><li id='nav-li6' onClick={Piano(fre[5])}>页面</li></Link>\r\n            <Link to='/'><li id='nav-li7' onClick={Piano(fre[6])}>页面6</li></Link>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './carousel.css';\r\n\r\nfunction Carousel(props) {\r\n    const local = 'http://127.0.0.1';\r\n\r\n    const [state, setState] = useState(1);\r\n\r\n\r\n    const [imgList, setImgList] = useState(props.Img);\r\n    const [img, setImg] = useState(local + props.Img[0].url);\r\n    const [style, setStyle] = useState(\"bd4\");\r\n    const [ok, setOk] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (ok) {\r\n            setTimeout(() => { if (state != 4) { setState(state + 1) } else { setState(0) }; }, 3000);\r\n        }\r\n        switch (state) {\r\n\r\n            case 1: setStyle(\"bd1\"); setImg(local + imgList[0].url); break;\r\n            case 2: setStyle(\"bd2\"); setImg(local + imgList[1].url); break;\r\n            case 3: setStyle(\"bd3\"); setImg(local + imgList[2].url); break;\r\n            case 4: setStyle(\"bd4\"); setImg(local + imgList[3].url); break;\r\n        }\r\n\r\n    }, );\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"banner\">\r\n            <div className={`bannerImg ${style}`} >\r\n                <img src={img} alt=\"\" />\r\n            </div>\r\n            <div className=\"bannerCon\">\r\n                <ul>\r\n                    <li className='bc1 ' onClick={() => { setState(1); setOk(0); }}>{imgList[0].title}</li>\r\n                    <li className='bc2 ' onClick={() => { setState(2); setOk(0); }}>{imgList[1].title}</li>\r\n                    <li className='bc3 ' onClick={() => { setState(3); setOk(0); }}>{imgList[2].title}</li>\r\n                    <li className='bc4 ' onClick={() => { setState(4); setOk(0); }}>{imgList[3].title}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Carousel;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport './photoShow.css';\r\nfunction FetchUpload(props) {\r\n    const [upok, setUpok] = useState(0);\r\n\r\n    const fileInput = useRef();\r\n    const uploadSrc = useRef();\r\n    \r\n    \r\n    const [photoList, setPhotoList] = useState(props.photoList);\r\n\r\n    const localURL =\"http://127.0.0.1/\"\r\n\r\n    const upload = () => {\r\n        setUpok(0);\r\n        const data = new FormData();\r\n        data.append('file', fileInput.current.files[0]);  //相当于 input:file 中的name属性   \r\n        fetch('http://127.0.0.1/photo/upload', {\r\n            method: 'POST',\r\n            body: data\r\n        }).then(res => res.text()).then(res => props.getChange(!props.change));\r\n        uploadSrc.current.src = '';\r\n        setUpok(0);\r\n    };\r\n\r\n    const changeUpload = () => {\r\n\r\n        var reader = new FileReader();\r\n        if(fileInput.current.files[0]){\r\n            reader.readAsDataURL(fileInput.current.files[0]);\r\n            reader.onload = () => {\r\n                uploadSrc.current.src = reader.result;\r\n                setUpok(1);\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <div className='show'>\r\n            <div className=\"upload pbox\">\r\n                <div className='upImg' onClick={() => { fileInput.current.click(); }}>\r\n                    <img src='' alt=\"\" ref={uploadSrc} />\r\n                </div>\r\n                <input type=\"file\" name='file' ref={fileInput} accept=\".jpg,.jpeg,.png\" hidden onChange={changeUpload} />\r\n                <input type={upok ? \"button\" : 'hidden'} value=\"上传\" onClick={upload} />\r\n            </div>\r\n            {photoList.map((photo) => {\r\n                return (\r\n                    <div className='photo pbox' key={photo._id}>\r\n                        <div className=\"photoBox\">\r\n                            <a href={localURL+photo.url} target=\"_blank\">\r\n                            <img src={localURL+photo.url} alt=\"\" />\r\n                            </a>\r\n                            </div>\r\n                        <div className='photoName'>{photo.title}</div>\r\n                    </div>)\r\n            }) \r\n            }\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default FetchUpload;\r\n","import React from 'react';\r\nimport './Loading.css';\r\nfunction Loading() {\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n       <div className='loading'>\r\n       <div className='piece1'></div>\r\n       <div className='piece2'></div>\r\n       <div className='piece3'></div>\r\n       <div className='piece4'></div>\r\n       <div className='piece5'></div>\r\n       </div>\r\n    </React.Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Carousel from '../../component/carousel/carousel';\r\nimport PhotoShow from '../../component/photoShow';\r\nimport Loading from '../../component/Loading';\r\nimport './index.css';\r\n\r\nexport default function Index() {\r\n  const [photoList, setPhotoList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(1);\r\n  const [change, setChange] = useState(1);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setIsLoading(1);\r\n    fetch('http://127.0.0.1/photo', {\r\n      method: 'get'\r\n    }).then(res => res.text()).then(res => {\r\n      let result = JSON.parse(res).records;\r\n      setPhotoList(result);\r\n      setIsLoading(0);\r\n    })\r\n  }, [change])\r\n\r\n  \r\n  function getChange(v) {\r\n    console.log(change);\r\n    \r\n    setChange(v);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      \r\n      {!isLoading ?<Carousel Img={photoList.slice(0,4)}></Carousel> :<Loading></Loading>}\r\n      {!isLoading && <PhotoShow photoList={photoList} getChange={getChange}  change={change}/>}\r\n    </React.Fragment>\r\n  );\r\n\r\n}","import axios from 'axios';\r\n\r\nconst api = \"https://5e2d1ba91b72860014dd56bd.mockapi.io\"\r\n\r\nexport const getAll = () =>axios.get(`${api}/api/v1/records`);\r\n\r\nexport const create = (body) =>axios.post(`${api}/api/v1/records`,body);\r\n\r\nexport const update = (id,body) =>axios.put(`${api}/api/v1/records/${id}`,body);\r\n\r\nexport const remove = (id) =>axios.delete(`${api}/api/v1/records/${id}`);","import React, { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as RecordsAPI from './utils/RecordsAPI';\r\n\r\nexport default function Record(props) {\r\n\r\n\r\n\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const rDate = useRef();\r\n    const rTitle = useRef();\r\n    const rAmount = useRef();\r\n\r\n\r\n    function handleToggle() {\r\n        setEdit(!edit);\r\n    }\r\n    function handleEdit(e) {\r\n        e.preventDefault();\r\n        const record = {\r\n            date: rDate.current.value,\r\n            title: rTitle.current.value,\r\n            amount: Number.parseInt(rAmount.current.value, 0)\r\n        }\r\n\r\n        RecordsAPI.update(props.record.id, record).then(\r\n            response => {\r\n                props.handleEditRecord(props.record, response.data)\r\n                setEdit(false);\r\n            }\r\n        ).catch(\r\n            error => console.log(error.message)\r\n\r\n        )\r\n\r\n\r\n    }\r\n    function handleDelete(e) {\r\n        e.preventDefault();\r\n        RecordsAPI.remove(props.record.id).then(\r\n            response => props.handleDeleteRecord(props.record)\r\n        ).catch(\r\n            error => console.log(error.message)\r\n        )\r\n    }\r\n\r\n\r\n    function recordRow() {\r\n        return (\r\n            <tr>\r\n                <td>{props.record.date} </td>\r\n                <td>{props.record.title} </td>\r\n                <td>{props.record.amount} </td>\r\n                <td> <button className=\"btn btn-info mr-1\" onClick={handleToggle} >Edit</button>\r\n                    <button className=\"btn btn-danger\" onClick={handleDelete} >Delete</button></td>\r\n            </tr>);\r\n    }\r\n    function recordForm() {\r\n        return (\r\n            <tr>\r\n                <td><input type=\"text\" className=\"form-control\" defaultValue={props.record.date} ref={rDate} /></td>\r\n                <td><input type=\"text\" className=\"form-control\" defaultValue={props.record.title} ref={rTitle} /></td>\r\n                <td><input type=\"text\" className=\"form-control\" defaultValue={props.record.amount} ref={rAmount} /></td>\r\n\r\n                <td> <button className=\"btn btn-info mr-1\" onClick={handleEdit}>Update</button>\r\n                    <button className=\"btn btn-danger\" onClick={handleToggle} >Cancel</button></td>\r\n            </tr>);\r\n    }\r\n    if (edit) {\r\n        return recordForm();\r\n    } else {\r\n        return recordRow();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nRecord.propTypes = {\r\n    id: PropTypes.string,\r\n    date: PropTypes.string,\r\n    title: PropTypes.string,\r\n    amount: PropTypes.number\r\n}","import React, { useState } from 'react';\r\nimport * as RecordsAPI from './utils/RecordsAPI';\r\n\r\nexport default function RecordForm(props) {\r\n    const [date, setDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    function valid() {\r\n        return date && title && amount;\r\n    }\r\n    function handleSubmit(e) {\r\n\r\n        const data = { date: date, title: title, amount: Number.parseInt(amount, 0) };\r\n\r\n        e.preventDefault();\r\n        RecordsAPI.create(data).then(\r\n            response => {\r\n                props.handleNewRecord(response.data);\r\n                setDate(\"\");\r\n                setTitle(\"\");\r\n                setAmount(\"\");\r\n            }\r\n\r\n        ).catch(\r\n            error =>\r\n                console.log(error.message)\r\n\r\n        )\r\n    }\r\n    return (\r\n        <form className='form-inline mb-3' onSubmit={handleSubmit}>\r\n            <div className=\"form-group mr-1\">\r\n                <input type=\"text\" className='form-control' onChange={(e) => setDate(e.target.value)} placeholder=\"Date\" name=\"date\" value={date}></input>\r\n            </div>\r\n            <div className=\"form-group mr-1\">\r\n                <input type=\"text\" className='form-control' onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\" name=\"title\" value={title}></input>\r\n            </div>\r\n            <div className=\"form-group mr-1\">\r\n                <input type=\"text\" className='form-control' onChange={(e) => setAmount(e.target.value)} placeholder=\"Amount\" name=\"amount\" value={amount}></input>\r\n            </div>\r\n            <button type='submit' className='btn btn-primary' disabled={!valid()}>Creat Record</button>\r\n\r\n        </form>)\r\n}","import React from 'react';\r\n\r\n\r\nexport default function AmountBox({text,type,amount}) {\r\n    return (\r\n        <div className='col'>\r\n            <div className='card'>\r\n                <div className={`card-header bg-${type} text-white`}>\r\n                    {text}\r\n                </div>\r\n                {amount}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Record from './Record';\n\nimport * as RecordsAPI from './utils/RecordsAPI'\nimport RecordForm from './recordForm'\nimport AmountBox from './AmountBox'\n\n\n\nfunction Records() {\n  const [records, setRecords] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n\n  useEffect(() => {\n    RecordsAPI.getAll().then(\n      response => {\n        setRecords(response.data);\n        setIsLoaded(true);\n\n      }\n    ).catch(\n      error => {\n        setIsLoaded(true);\n        setError(error.message);\n      }\n    )\n  }, []);\n  let recordComponent = null;\n  if (error) {\n    recordComponent = (<div>{error}</div>)\n  } else if (!isLoaded) {\n    recordComponent = (<div>Loading</div>)\n  } else if (isLoaded) {\n\n    function updateRecord(record, data) {\n      const recordIndex = records.indexOf(record);\n      const newRecords = records.map((item, index) => {\n        if (index !== recordIndex) {\n          // This isn't the item we care about - keep it as-is\n          return item;\n        }\n\n        // Otherwise, this is the one we want - return an updated value\n        return {\n          ...item,\n          ...data\n        };\n      });\n      setRecords(newRecords)\n\n    }\n    function deleteRecord(record) {\n      const recordIndex = records.indexOf(record);\n      const newRecords = records.filter((item, index) => index !== recordIndex);\n      setRecords(newRecords);\n    }\n    recordComponent = (\n\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>title</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            {records.map((record, i) => <Record key={record.id} record={record}\n              handleEditRecord={updateRecord}\n              handleDeleteRecord={deleteRecord}\n            />)}\n\n          </tbody>\n        </table>\n\n      </div>\n\n\n    );\n  }\n\n  function addRecord(record) {\n    setRecords([...records, record]);\n    setError(null);\n    setIsLoaded(true);\n  }\n\n  function credits() {\n    let credits = records.filter(record => {\n      return record.amount >= 0;\n    })\n    return credits.reduce((prev, curr) => {\n      return prev + Number.parseInt(curr.amount, 0);\n    }, 0)\n  }\n\n  function debits() {\n    let credits = records.filter(record => {\n      return record.amount < 0;\n    })\n    return credits.reduce((prev, curr) => {\n      return prev + Number.parseInt(curr.amount, 0);\n    }, 0)\n  }\n  function balance() {\n    return credits() + debits();\n  }\n  return (\n    <React.Fragment>\n      <h1> &nbsp; </h1>\n      <div className='row mb-3'>\n        <AmountBox text='收入' type='success' amount={credits()}></AmountBox>\n        <AmountBox text='支出' type='danger' amount={debits()}></AmountBox>\n        <AmountBox text='余额' type='info' amount={balance()}></AmountBox>\n      </div>\n      <RecordForm handleNewRecord={addRecord} />\n      {recordComponent}\n    </React.Fragment>\n\n  )\n}\n\nexport default Records;","import React from 'react';\r\nfunction C404() {\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n404\r\n    </React.Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default C404;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Index from '../../pages/index'\r\nimport Two from '../../pages/two/Records';\r\nimport c404 from '../../component/404'\r\nexport default function Main() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path='/' exact component={Index}></Route>\r\n                <Route path='/two' component={Two}></Route>\r\n                <Route component={c404}></Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport Header from './component/header';\nimport Main from './component/main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header></Header>\n      <Main></Main>\n    </React.Fragment>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router} from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<Router><App /></Router>\n\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}